

/*
 * Authorization
 * Provides functions to administrate the Authorization and Trust Management service (XSUAA) of SAP BTP, Cloud Foundry environment. You can manage service instances of the Authorization and Trust Management service. You can also manage roles, role templates, and role collections of your subaccount.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.generated.promopricing.authorization.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * The array groupReferences is deprecated and only provided to maintain backward compatibility. Please use the array samlAttrAssignment instead.
 */

// CHECKSTYLE:OFF
public class GroupReference 
// CHECKSTYLE:ON
{
  @JsonProperty("DEPRECTAED")
  private String DEPRECTAED;

  @JsonAnySetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the DEPRECTAED of this {@link GroupReference} instance and return the same instance.
   *
   * @param DEPRECTAED  The DEPRECTAED of this {@link GroupReference}
   * @return The same instance of this {@link GroupReference} class
   */
   @Nonnull public GroupReference DEPRECTAED(@Nonnull final String DEPRECTAED) {
    this.DEPRECTAED = DEPRECTAED;
    return this;
  }

   /**
   * Get DEPRECTAED
   * @return DEPRECTAED  The DEPRECTAED of this {@link GroupReference} instance.
  **/
  @Nonnull public String getDEPRECTAED() {
    return DEPRECTAED;
  }

  /**
  * Set the DEPRECTAED of this {@link GroupReference} instance.
  *
  * @param DEPRECTAED  The DEPRECTAED of this {@link GroupReference}
  */
  public void setDEPRECTAED( @Nonnull final String DEPRECTAED) {
    this.DEPRECTAED = DEPRECTAED;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link GroupReference}.
   * @return The set of properties names
   */
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of the {@link GroupReference}.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("GroupReference has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final GroupReference groupReference = (GroupReference) o;
    return Objects.equals(this.cloudSdkCustomFields, groupReference.cloudSdkCustomFields) &&
        Objects.equals(this.DEPRECTAED, groupReference.DEPRECTAED);
  }

  @Override
  public int hashCode() {
    return Objects.hash(DEPRECTAED, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class GroupReference {\n");
    sb.append("    DEPRECTAED: ").append(toIndentedString(DEPRECTAED)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

