

/*
 * Authorization
 * Provides functions to administrate the Authorization and Trust Management service (XSUAA) of SAP BTP, Cloud Foundry environment. You can manage service instances of the Authorization and Trust Management service. You can also manage roles, role templates, and role collections of your subaccount.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.generated.promopricing.authorization.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * IdentityProviderMapping
 */

// CHECKSTYLE:OFF
public class IdentityProviderMapping 
// CHECKSTYLE:ON
{
  @JsonProperty("attributeName")
  private String attributeName;

  @JsonProperty("attributeValue")
  private String attributeValue;

  @JsonProperty("operator")
  private String operator;

  @JsonProperty("roleCollectionName")
  private String roleCollectionName;

  @JsonAnySetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the attributeName of this {@link IdentityProviderMapping} instance and return the same instance.
   *
   * @param attributeName  The name of the attribute that you want to add.
   * @return The same instance of this {@link IdentityProviderMapping} class
   */
   @Nonnull public IdentityProviderMapping attributeName(@Nonnull final String attributeName) {
    this.attributeName = attributeName;
    return this;
  }

   /**
   * The name of the attribute that you want to add.
   * @return attributeName  The attributeName of this {@link IdentityProviderMapping} instance.
  **/
  @Nonnull public String getAttributeName() {
    return attributeName;
  }

  /**
  * Set the attributeName of this {@link IdentityProviderMapping} instance.
  *
  * @param attributeName  The name of the attribute that you want to add.
  */
  public void setAttributeName( @Nonnull final String attributeName) {
    this.attributeName = attributeName;
  }

   /**
   * Set the attributeValue of this {@link IdentityProviderMapping} instance and return the same instance.
   *
   * @param attributeValue  The value of the attribute that you want to add.
   * @return The same instance of this {@link IdentityProviderMapping} class
   */
   @Nonnull public IdentityProviderMapping attributeValue(@Nonnull final String attributeValue) {
    this.attributeValue = attributeValue;
    return this;
  }

   /**
   * The value of the attribute that you want to add.
   * @return attributeValue  The attributeValue of this {@link IdentityProviderMapping} instance.
  **/
  @Nonnull public String getAttributeValue() {
    return attributeValue;
  }

  /**
  * Set the attributeValue of this {@link IdentityProviderMapping} instance.
  *
  * @param attributeValue  The value of the attribute that you want to add.
  */
  public void setAttributeValue( @Nonnull final String attributeValue) {
    this.attributeValue = attributeValue;
  }

   /**
   * Set the operator of this {@link IdentityProviderMapping} instance and return the same instance.
   *
   * @param operator  The operator value that matches the attribute name to its value.
   * @return The same instance of this {@link IdentityProviderMapping} class
   */
   @Nonnull public IdentityProviderMapping operator(@Nonnull final String operator) {
    this.operator = operator;
    return this;
  }

   /**
   * The operator value that matches the attribute name to its value.
   * @return operator  The operator of this {@link IdentityProviderMapping} instance.
  **/
  @Nonnull public String getOperator() {
    return operator;
  }

  /**
  * Set the operator of this {@link IdentityProviderMapping} instance.
  *
  * @param operator  The operator value that matches the attribute name to its value.
  */
  public void setOperator( @Nonnull final String operator) {
    this.operator = operator;
  }

   /**
   * Set the roleCollectionName of this {@link IdentityProviderMapping} instance and return the same instance.
   *
   * @param roleCollectionName  The name of the role collection.
   * @return The same instance of this {@link IdentityProviderMapping} class
   */
   @Nonnull public IdentityProviderMapping roleCollectionName(@Nonnull final String roleCollectionName) {
    this.roleCollectionName = roleCollectionName;
    return this;
  }

   /**
   * The name of the role collection.
   * @return roleCollectionName  The roleCollectionName of this {@link IdentityProviderMapping} instance.
  **/
  @Nonnull public String getRoleCollectionName() {
    return roleCollectionName;
  }

  /**
  * Set the roleCollectionName of this {@link IdentityProviderMapping} instance.
  *
  * @param roleCollectionName  The name of the role collection.
  */
  public void setRoleCollectionName( @Nonnull final String roleCollectionName) {
    this.roleCollectionName = roleCollectionName;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link IdentityProviderMapping}.
   * @return The set of properties names
   */
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of the {@link IdentityProviderMapping}.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("IdentityProviderMapping has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final IdentityProviderMapping identityProviderMapping = (IdentityProviderMapping) o;
    return Objects.equals(this.cloudSdkCustomFields, identityProviderMapping.cloudSdkCustomFields) &&
        Objects.equals(this.attributeName, identityProviderMapping.attributeName) &&
        Objects.equals(this.attributeValue, identityProviderMapping.attributeValue) &&
        Objects.equals(this.operator, identityProviderMapping.operator) &&
        Objects.equals(this.roleCollectionName, identityProviderMapping.roleCollectionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeName, attributeValue, operator, roleCollectionName, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class IdentityProviderMapping {\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    attributeValue: ").append(toIndentedString(attributeValue)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    roleCollectionName: ").append(toIndentedString(roleCollectionName)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

