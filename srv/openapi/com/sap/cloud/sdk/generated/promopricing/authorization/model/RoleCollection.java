

/*
 * Authorization
 * Provides functions to administrate the Authorization and Trust Management service (XSUAA) of SAP BTP, Cloud Foundry environment. You can manage service instances of the Authorization and Trust Management service. You can also manage roles, role templates, and role collections of your subaccount.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.generated.promopricing.authorization.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.generated.promopricing.authorization.model.GroupReference;
import com.sap.cloud.sdk.generated.promopricing.authorization.model.RoleReference;
import com.sap.cloud.sdk.generated.promopricing.authorization.model.SamlAttrAssignment;
import com.sap.cloud.sdk.generated.promopricing.authorization.model.UserReference;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * RoleCollection
 */

// CHECKSTYLE:OFF
public class RoleCollection 
// CHECKSTYLE:ON
{
  @JsonProperty("name")
  private String name;

  @JsonProperty("description")
  private String description;

  @JsonProperty("groupReferences")
  private List<GroupReference> groupReferences = new ArrayList<>();

  @JsonProperty("roleReferences")
  private List<RoleReference> roleReferences = new ArrayList<>();

  @JsonProperty("userReferences")
  private List<UserReference> userReferences = new ArrayList<>();

  @JsonProperty("samlAttrAssignment")
  private List<SamlAttrAssignment> samlAttrAssignment = new ArrayList<>();

  @JsonProperty("isReadOnly")
  private Boolean isReadOnly;

  @JsonAnySetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the name of this {@link RoleCollection} instance and return the same instance.
   *
   * @param name  The name has a maximum length of 64 characters.
   * @return The same instance of this {@link RoleCollection} class
   */
   @Nonnull public RoleCollection name(@Nonnull final String name) {
    this.name = name;
    return this;
  }

   /**
   * The name has a maximum length of 64 characters.
   * @return name  The name of this {@link RoleCollection} instance.
  **/
  @Nonnull public String getName() {
    return name;
  }

  /**
  * Set the name of this {@link RoleCollection} instance.
  *
  * @param name  The name has a maximum length of 64 characters.
  */
  public void setName( @Nonnull final String name) {
    this.name = name;
  }

   /**
   * Set the description of this {@link RoleCollection} instance and return the same instance.
   *
   * @param description  The description has a maximum length of 1000 characters.
   * @return The same instance of this {@link RoleCollection} class
   */
   @Nonnull public RoleCollection description(@Nonnull final String description) {
    this.description = description;
    return this;
  }

   /**
   * The description has a maximum length of 1000 characters.
   * @return description  The description of this {@link RoleCollection} instance.
  **/
  @Nonnull public String getDescription() {
    return description;
  }

  /**
  * Set the description of this {@link RoleCollection} instance.
  *
  * @param description  The description has a maximum length of 1000 characters.
  */
  public void setDescription( @Nonnull final String description) {
    this.description = description;
  }

   /**
   * Set the groupReferences of this {@link RoleCollection} instance and return the same instance.
   *
   * @param groupReferences  The groupReferences of this {@link RoleCollection}
   * @return The same instance of this {@link RoleCollection} class
   */
   @Nonnull public RoleCollection groupReferences(@Nonnull final List<GroupReference> groupReferences) {
    this.groupReferences = groupReferences;
    return this;
  }
  /**
  * Add one GroupReferences instance to this {@link RoleCollection}.
  * @param groupReferencesItem The GroupReferences that should be added
  * @return The same instance of type {@link RoleCollection}
  */
  @Nonnull public RoleCollection addGroupReferencesItem( @Nonnull final GroupReference groupReferencesItem) {
    if (this.groupReferences == null) {
      this.groupReferences = new ArrayList<>();
    }
    this.groupReferences.add(groupReferencesItem);
    return this;
  }

   /**
   * Get groupReferences
   * @return groupReferences  The groupReferences of this {@link RoleCollection} instance.
  **/
  @Nonnull public List<GroupReference> getGroupReferences() {
    return groupReferences;
  }

  /**
  * Set the groupReferences of this {@link RoleCollection} instance.
  *
  * @param groupReferences  The groupReferences of this {@link RoleCollection}
  */
  public void setGroupReferences( @Nonnull final List<GroupReference> groupReferences) {
    this.groupReferences = groupReferences;
  }

   /**
   * Set the roleReferences of this {@link RoleCollection} instance and return the same instance.
   *
   * @param roleReferences  The roleReferences of this {@link RoleCollection}
   * @return The same instance of this {@link RoleCollection} class
   */
   @Nonnull public RoleCollection roleReferences(@Nonnull final List<RoleReference> roleReferences) {
    this.roleReferences = roleReferences;
    return this;
  }
  /**
  * Add one RoleReferences instance to this {@link RoleCollection}.
  * @param roleReferencesItem The RoleReferences that should be added
  * @return The same instance of type {@link RoleCollection}
  */
  @Nonnull public RoleCollection addRoleReferencesItem( @Nonnull final RoleReference roleReferencesItem) {
    if (this.roleReferences == null) {
      this.roleReferences = new ArrayList<>();
    }
    this.roleReferences.add(roleReferencesItem);
    return this;
  }

   /**
   * Get roleReferences
   * @return roleReferences  The roleReferences of this {@link RoleCollection} instance.
  **/
  @Nonnull public List<RoleReference> getRoleReferences() {
    return roleReferences;
  }

  /**
  * Set the roleReferences of this {@link RoleCollection} instance.
  *
  * @param roleReferences  The roleReferences of this {@link RoleCollection}
  */
  public void setRoleReferences( @Nonnull final List<RoleReference> roleReferences) {
    this.roleReferences = roleReferences;
  }

   /**
   * Set the userReferences of this {@link RoleCollection} instance and return the same instance.
   *
   * @param userReferences  The userReferences of this {@link RoleCollection}
   * @return The same instance of this {@link RoleCollection} class
   */
   @Nonnull public RoleCollection userReferences(@Nonnull final List<UserReference> userReferences) {
    this.userReferences = userReferences;
    return this;
  }
  /**
  * Add one UserReferences instance to this {@link RoleCollection}.
  * @param userReferencesItem The UserReferences that should be added
  * @return The same instance of type {@link RoleCollection}
  */
  @Nonnull public RoleCollection addUserReferencesItem( @Nonnull final UserReference userReferencesItem) {
    if (this.userReferences == null) {
      this.userReferences = new ArrayList<>();
    }
    this.userReferences.add(userReferencesItem);
    return this;
  }

   /**
   * Get userReferences
   * @return userReferences  The userReferences of this {@link RoleCollection} instance.
  **/
  @Nonnull public List<UserReference> getUserReferences() {
    return userReferences;
  }

  /**
  * Set the userReferences of this {@link RoleCollection} instance.
  *
  * @param userReferences  The userReferences of this {@link RoleCollection}
  */
  public void setUserReferences( @Nonnull final List<UserReference> userReferences) {
    this.userReferences = userReferences;
  }

   /**
   * Set the samlAttrAssignment of this {@link RoleCollection} instance and return the same instance.
   *
   * @param samlAttrAssignment  The samlAttrAssignment of this {@link RoleCollection}
   * @return The same instance of this {@link RoleCollection} class
   */
   @Nonnull public RoleCollection samlAttrAssignment(@Nonnull final List<SamlAttrAssignment> samlAttrAssignment) {
    this.samlAttrAssignment = samlAttrAssignment;
    return this;
  }
  /**
  * Add one SamlAttrAssignment instance to this {@link RoleCollection}.
  * @param samlAttrAssignmentItem The SamlAttrAssignment that should be added
  * @return The same instance of type {@link RoleCollection}
  */
  @Nonnull public RoleCollection addSamlAttrAssignmentItem( @Nonnull final SamlAttrAssignment samlAttrAssignmentItem) {
    if (this.samlAttrAssignment == null) {
      this.samlAttrAssignment = new ArrayList<>();
    }
    this.samlAttrAssignment.add(samlAttrAssignmentItem);
    return this;
  }

   /**
   * Get samlAttrAssignment
   * @return samlAttrAssignment  The samlAttrAssignment of this {@link RoleCollection} instance.
  **/
  @Nonnull public List<SamlAttrAssignment> getSamlAttrAssignment() {
    return samlAttrAssignment;
  }

  /**
  * Set the samlAttrAssignment of this {@link RoleCollection} instance.
  *
  * @param samlAttrAssignment  The samlAttrAssignment of this {@link RoleCollection}
  */
  public void setSamlAttrAssignment( @Nonnull final List<SamlAttrAssignment> samlAttrAssignment) {
    this.samlAttrAssignment = samlAttrAssignment;
  }

   /**
   * Set the isReadOnly of this {@link RoleCollection} instance and return the same instance.
   *
   * @param isReadOnly  The isReadOnly of this {@link RoleCollection}
   * @return The same instance of this {@link RoleCollection} class
   */
   @Nonnull public RoleCollection isReadOnly(@Nonnull final Boolean isReadOnly) {
    this.isReadOnly = isReadOnly;
    return this;
  }

   /**
   * Get isReadOnly
   * @return isReadOnly  The isReadOnly of this {@link RoleCollection} instance.
  **/
  @Nonnull public Boolean isIsReadOnly() {
    return isReadOnly;
  }

  /**
  * Set the isReadOnly of this {@link RoleCollection} instance.
  *
  * @param isReadOnly  The isReadOnly of this {@link RoleCollection}
  */
  public void setIsReadOnly( @Nonnull final Boolean isReadOnly) {
    this.isReadOnly = isReadOnly;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link RoleCollection}.
   * @return The set of properties names
   */
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of the {@link RoleCollection}.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("RoleCollection has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final RoleCollection roleCollection = (RoleCollection) o;
    return Objects.equals(this.cloudSdkCustomFields, roleCollection.cloudSdkCustomFields) &&
        Objects.equals(this.name, roleCollection.name) &&
        Objects.equals(this.description, roleCollection.description) &&
        Objects.equals(this.groupReferences, roleCollection.groupReferences) &&
        Objects.equals(this.roleReferences, roleCollection.roleReferences) &&
        Objects.equals(this.userReferences, roleCollection.userReferences) &&
        Objects.equals(this.samlAttrAssignment, roleCollection.samlAttrAssignment) &&
        Objects.equals(this.isReadOnly, roleCollection.isReadOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, groupReferences, roleReferences, userReferences, samlAttrAssignment, isReadOnly, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class RoleCollection {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    groupReferences: ").append(toIndentedString(groupReferences)).append("\n");
    sb.append("    roleReferences: ").append(toIndentedString(roleReferences)).append("\n");
    sb.append("    userReferences: ").append(toIndentedString(userReferences)).append("\n");
    sb.append("    samlAttrAssignment: ").append(toIndentedString(samlAttrAssignment)).append("\n");
    sb.append("    isReadOnly: ").append(toIndentedString(isReadOnly)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

