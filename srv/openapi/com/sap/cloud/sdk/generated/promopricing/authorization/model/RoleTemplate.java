

/*
 * Authorization
 * Provides functions to administrate the Authorization and Trust Management service (XSUAA) of SAP BTP, Cloud Foundry environment. You can manage service instances of the Authorization and Trust Management service. You can also manage roles, role templates, and role collections of your subaccount.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.generated.promopricing.authorization.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.generated.promopricing.authorization.model.AttributeReference;
import com.sap.cloud.sdk.generated.promopricing.authorization.model.Role;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * RoleTemplate
 */

// CHECKSTYLE:OFF
public class RoleTemplate 
// CHECKSTYLE:ON
{
  @JsonProperty("appDescription")
  private String appDescription;

  @JsonProperty("appId")
  private String appId;

  @JsonProperty("appName")
  private String appName;

  @JsonProperty("attribute-references")
  private List<AttributeReference> attributeReferences = new ArrayList<>();

  @JsonProperty("default-role-name")
  private String defaultRoleName;

  @JsonProperty("description")
  private String description;

  @JsonProperty("name")
  private String name;

  @JsonProperty("role-references")
  private List<Role> roleReferences = new ArrayList<>();

  @JsonProperty("scope-references")
  private List<String> scopeReferences = new ArrayList<>();

  @JsonProperty("version")
  private String version;

  @JsonAnySetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the appDescription of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param appDescription  The appDescription of this {@link RoleTemplate}
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate appDescription(@Nonnull final String appDescription) {
    this.appDescription = appDescription;
    return this;
  }

   /**
   * Get appDescription
   * @return appDescription  The appDescription of this {@link RoleTemplate} instance.
  **/
  @Nonnull public String getAppDescription() {
    return appDescription;
  }

  /**
  * Set the appDescription of this {@link RoleTemplate} instance.
  *
  * @param appDescription  The appDescription of this {@link RoleTemplate}
  */
  public void setAppDescription( @Nonnull final String appDescription) {
    this.appDescription = appDescription;
  }

   /**
   * Set the appId of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param appId  The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan underwhich the application is deployed, and an index number.
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate appId(@Nonnull final String appId) {
    this.appId = appId;
    return this;
  }

   /**
   * The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan underwhich the application is deployed, and an index number.
   * @return appId  The appId of this {@link RoleTemplate} instance.
  **/
  @Nonnull public String getAppId() {
    return appId;
  }

  /**
  * Set the appId of this {@link RoleTemplate} instance.
  *
  * @param appId  The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan underwhich the application is deployed, and an index number.
  */
  public void setAppId( @Nonnull final String appId) {
    this.appId = appId;
  }

   /**
   * Set the appName of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param appName  The appName of this {@link RoleTemplate}
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate appName(@Nonnull final String appName) {
    this.appName = appName;
    return this;
  }

   /**
   * Get appName
   * @return appName  The appName of this {@link RoleTemplate} instance.
  **/
  @Nonnull public String getAppName() {
    return appName;
  }

  /**
  * Set the appName of this {@link RoleTemplate} instance.
  *
  * @param appName  The appName of this {@link RoleTemplate}
  */
  public void setAppName( @Nonnull final String appName) {
    this.appName = appName;
  }

   /**
   * Set the attributeReferences of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param attributeReferences  The attributeReferences of this {@link RoleTemplate}
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate attributeReferences(@Nonnull final List<AttributeReference> attributeReferences) {
    this.attributeReferences = attributeReferences;
    return this;
  }
  /**
  * Add one AttributeReferences instance to this {@link RoleTemplate}.
  * @param attributeReferencesItem The AttributeReferences that should be added
  * @return The same instance of type {@link RoleTemplate}
  */
  @Nonnull public RoleTemplate addAttributeReferencesItem( @Nonnull final AttributeReference attributeReferencesItem) {
    if (this.attributeReferences == null) {
      this.attributeReferences = new ArrayList<>();
    }
    this.attributeReferences.add(attributeReferencesItem);
    return this;
  }

   /**
   * Get attributeReferences
   * @return attributeReferences  The attributeReferences of this {@link RoleTemplate} instance.
  **/
  @Nonnull public List<AttributeReference> getAttributeReferences() {
    return attributeReferences;
  }

  /**
  * Set the attributeReferences of this {@link RoleTemplate} instance.
  *
  * @param attributeReferences  The attributeReferences of this {@link RoleTemplate}
  */
  public void setAttributeReferences( @Nonnull final List<AttributeReference> attributeReferences) {
    this.attributeReferences = attributeReferences;
  }

   /**
   * Set the defaultRoleName of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param defaultRoleName  The defaultRoleName of this {@link RoleTemplate}
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate defaultRoleName(@Nonnull final String defaultRoleName) {
    this.defaultRoleName = defaultRoleName;
    return this;
  }

   /**
   * Get defaultRoleName
   * @return defaultRoleName  The defaultRoleName of this {@link RoleTemplate} instance.
  **/
  @Nonnull public String getDefaultRoleName() {
    return defaultRoleName;
  }

  /**
  * Set the defaultRoleName of this {@link RoleTemplate} instance.
  *
  * @param defaultRoleName  The defaultRoleName of this {@link RoleTemplate}
  */
  public void setDefaultRoleName( @Nonnull final String defaultRoleName) {
    this.defaultRoleName = defaultRoleName;
  }

   /**
   * Set the description of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param description  The description of this {@link RoleTemplate}
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate description(@Nonnull final String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description  The description of this {@link RoleTemplate} instance.
  **/
  @Nonnull public String getDescription() {
    return description;
  }

  /**
  * Set the description of this {@link RoleTemplate} instance.
  *
  * @param description  The description of this {@link RoleTemplate}
  */
  public void setDescription( @Nonnull final String description) {
    this.description = description;
  }

   /**
   * Set the name of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param name  The name has a maximum length of 64 characters. Only the following characters are allowed: alphanumeric characters (aA-zZ) and (0-9) and underscore (_).
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate name(@Nonnull final String name) {
    this.name = name;
    return this;
  }

   /**
   * The name has a maximum length of 64 characters. Only the following characters are allowed: alphanumeric characters (aA-zZ) and (0-9) and underscore (_).
   * @return name  The name of this {@link RoleTemplate} instance.
  **/
  @Nonnull public String getName() {
    return name;
  }

  /**
  * Set the name of this {@link RoleTemplate} instance.
  *
  * @param name  The name has a maximum length of 64 characters. Only the following characters are allowed: alphanumeric characters (aA-zZ) and (0-9) and underscore (_).
  */
  public void setName( @Nonnull final String name) {
    this.name = name;
  }

   /**
   * Set the roleReferences of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param roleReferences  The roleReferences of this {@link RoleTemplate}
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate roleReferences(@Nonnull final List<Role> roleReferences) {
    this.roleReferences = roleReferences;
    return this;
  }
  /**
  * Add one RoleReferences instance to this {@link RoleTemplate}.
  * @param roleReferencesItem The RoleReferences that should be added
  * @return The same instance of type {@link RoleTemplate}
  */
  @Nonnull public RoleTemplate addRoleReferencesItem( @Nonnull final Role roleReferencesItem) {
    if (this.roleReferences == null) {
      this.roleReferences = new ArrayList<>();
    }
    this.roleReferences.add(roleReferencesItem);
    return this;
  }

   /**
   * Get roleReferences
   * @return roleReferences  The roleReferences of this {@link RoleTemplate} instance.
  **/
  @Nonnull public List<Role> getRoleReferences() {
    return roleReferences;
  }

  /**
  * Set the roleReferences of this {@link RoleTemplate} instance.
  *
  * @param roleReferences  The roleReferences of this {@link RoleTemplate}
  */
  public void setRoleReferences( @Nonnull final List<Role> roleReferences) {
    this.roleReferences = roleReferences;
  }

   /**
   * Set the scopeReferences of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param scopeReferences  The scopeReferences of this {@link RoleTemplate}
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate scopeReferences(@Nonnull final List<String> scopeReferences) {
    this.scopeReferences = scopeReferences;
    return this;
  }
  /**
  * Add one ScopeReferences instance to this {@link RoleTemplate}.
  * @param scopeReferencesItem The ScopeReferences that should be added
  * @return The same instance of type {@link RoleTemplate}
  */
  @Nonnull public RoleTemplate addScopeReferencesItem( @Nonnull final String scopeReferencesItem) {
    if (this.scopeReferences == null) {
      this.scopeReferences = new ArrayList<>();
    }
    this.scopeReferences.add(scopeReferencesItem);
    return this;
  }

   /**
   * Get scopeReferences
   * @return scopeReferences  The scopeReferences of this {@link RoleTemplate} instance.
  **/
  @Nonnull public List<String> getScopeReferences() {
    return scopeReferences;
  }

  /**
  * Set the scopeReferences of this {@link RoleTemplate} instance.
  *
  * @param scopeReferences  The scopeReferences of this {@link RoleTemplate}
  */
  public void setScopeReferences( @Nonnull final List<String> scopeReferences) {
    this.scopeReferences = scopeReferences;
  }

   /**
   * Set the version of this {@link RoleTemplate} instance and return the same instance.
   *
   * @param version  The version of this {@link RoleTemplate}
   * @return The same instance of this {@link RoleTemplate} class
   */
   @Nonnull public RoleTemplate version(@Nonnull final String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version  The version of this {@link RoleTemplate} instance.
  **/
  @Nonnull public String getVersion() {
    return version;
  }

  /**
  * Set the version of this {@link RoleTemplate} instance.
  *
  * @param version  The version of this {@link RoleTemplate}
  */
  public void setVersion( @Nonnull final String version) {
    this.version = version;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link RoleTemplate}.
   * @return The set of properties names
   */
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of the {@link RoleTemplate}.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("RoleTemplate has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final RoleTemplate roleTemplate = (RoleTemplate) o;
    return Objects.equals(this.cloudSdkCustomFields, roleTemplate.cloudSdkCustomFields) &&
        Objects.equals(this.appDescription, roleTemplate.appDescription) &&
        Objects.equals(this.appId, roleTemplate.appId) &&
        Objects.equals(this.appName, roleTemplate.appName) &&
        Objects.equals(this.attributeReferences, roleTemplate.attributeReferences) &&
        Objects.equals(this.defaultRoleName, roleTemplate.defaultRoleName) &&
        Objects.equals(this.description, roleTemplate.description) &&
        Objects.equals(this.name, roleTemplate.name) &&
        Objects.equals(this.roleReferences, roleTemplate.roleReferences) &&
        Objects.equals(this.scopeReferences, roleTemplate.scopeReferences) &&
        Objects.equals(this.version, roleTemplate.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appDescription, appId, appName, attributeReferences, defaultRoleName, description, name, roleReferences, scopeReferences, version, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class RoleTemplate {\n");
    sb.append("    appDescription: ").append(toIndentedString(appDescription)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    attributeReferences: ").append(toIndentedString(attributeReferences)).append("\n");
    sb.append("    defaultRoleName: ").append(toIndentedString(defaultRoleName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    roleReferences: ").append(toIndentedString(roleReferences)).append("\n");
    sb.append("    scopeReferences: ").append(toIndentedString(scopeReferences)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

