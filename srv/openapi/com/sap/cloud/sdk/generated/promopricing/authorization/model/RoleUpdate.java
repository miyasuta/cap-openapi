

/*
 * Authorization
 * Provides functions to administrate the Authorization and Trust Management service (XSUAA) of SAP BTP, Cloud Foundry environment. You can manage service instances of the Authorization and Trust Management service. You can also manage roles, role templates, and role collections of your subaccount.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.generated.promopricing.authorization.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.generated.promopricing.authorization.model.RoleAttribute;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * RoleUpdate
 */

// CHECKSTYLE:OFF
public class RoleUpdate 
// CHECKSTYLE:ON
{
  @JsonProperty("attributeList")
  private List<RoleAttribute> attributeList = new ArrayList<>();

  @JsonProperty("description")
  private String description;

  @JsonAnySetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the attributeList of this {@link RoleUpdate} instance and return the same instance.
   *
   * @param attributeList  The attributeList of this {@link RoleUpdate}
   * @return The same instance of this {@link RoleUpdate} class
   */
   @Nonnull public RoleUpdate attributeList(@Nonnull final List<RoleAttribute> attributeList) {
    this.attributeList = attributeList;
    return this;
  }
  /**
  * Add one AttributeList instance to this {@link RoleUpdate}.
  * @param attributeListItem The AttributeList that should be added
  * @return The same instance of type {@link RoleUpdate}
  */
  @Nonnull public RoleUpdate addAttributeListItem( @Nonnull final RoleAttribute attributeListItem) {
    if (this.attributeList == null) {
      this.attributeList = new ArrayList<>();
    }
    this.attributeList.add(attributeListItem);
    return this;
  }

   /**
   * Get attributeList
   * @return attributeList  The attributeList of this {@link RoleUpdate} instance.
  **/
  @Nonnull public List<RoleAttribute> getAttributeList() {
    return attributeList;
  }

  /**
  * Set the attributeList of this {@link RoleUpdate} instance.
  *
  * @param attributeList  The attributeList of this {@link RoleUpdate}
  */
  public void setAttributeList( @Nonnull final List<RoleAttribute> attributeList) {
    this.attributeList = attributeList;
  }

   /**
   * Set the description of this {@link RoleUpdate} instance and return the same instance.
   *
   * @param description  The description has a maximum length of 1000 characters.
   * @return The same instance of this {@link RoleUpdate} class
   */
   @Nonnull public RoleUpdate description(@Nonnull final String description) {
    this.description = description;
    return this;
  }

   /**
   * The description has a maximum length of 1000 characters.
   * @return description  The description of this {@link RoleUpdate} instance.
  **/
  @Nonnull public String getDescription() {
    return description;
  }

  /**
  * Set the description of this {@link RoleUpdate} instance.
  *
  * @param description  The description has a maximum length of 1000 characters.
  */
  public void setDescription( @Nonnull final String description) {
    this.description = description;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link RoleUpdate}.
   * @return The set of properties names
   */
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of the {@link RoleUpdate}.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("RoleUpdate has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final RoleUpdate roleUpdate = (RoleUpdate) o;
    return Objects.equals(this.cloudSdkCustomFields, roleUpdate.cloudSdkCustomFields) &&
        Objects.equals(this.attributeList, roleUpdate.attributeList) &&
        Objects.equals(this.description, roleUpdate.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeList, description, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class RoleUpdate {\n");
    sb.append("    attributeList: ").append(toIndentedString(attributeList)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

